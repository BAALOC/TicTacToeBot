from handlers.game_handlers.game_utils import create_game_board, send_game_message
from loader import bot
from telebot import types
import random
from config import GAMES_DICT
from utils import logger


@bot.callback_query_handler(func=lambda call: call.data.startswith('gamemode#'))
def handle_start_game(call: types.CallbackQuery) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã."""
    try:
        bot.answer_callback_query(call.id, '–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...')
        
        game_id = call.from_user.id
        game_mode = call.data.split("#")[1]
        invite_link = f'https://t.me/TicTacToeBaalocBot?start={game_id}'
        
        message_text = (
            f'üéÆ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∏–≥—Ä—É! –†–µ–∂–∏–º –∏–≥—Ä—ã: {game_mode}\n\n'
            f'–ü–µ—Ä–µ—à–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥—É, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å:\n\n{invite_link}\n\n'
            'üëÜ –ö–æ–≥–¥–∞ —Ç–≤–æ–π –¥—Ä—É–≥ –ø–µ—Ä–µ–π–¥–µ—Ç –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!'
        )
        bot.send_message(call.from_user.id, message_text)
        
        size = int(game_mode.split("x")[0])
        GAMES_DICT[game_id] = {
            'size': size,
            'player1': {
                'id': call.from_user.id,
                'username': call.from_user.username,
                'symbol': random.choice(['‚ùå', '‚≠ï']),
            },
            'player2': None,
            'board': create_game_board(size, game_id),
            'current_turn': None
        }
        
        logger.info(f'–ò–≥—Ä–∞ {game_id} —Å–æ–∑–¥–∞–Ω–∞. –†–∞–∑–º–µ—Ä: {size}x{size}. –ò–≥—Ä–æ–∫ 1: {call.from_user.username}')

    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –≤ handle_start_game: {e}', exc_info=True)
        bot.answer_callback_query(call.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ')


@bot.callback_query_handler(func=lambda call: call.data == 'bot_start_game')
def handle_bot_start_game(call: types.CallbackQuery) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã —Å –±–æ—Ç–æ–º."""
    try:
        bot.answer_callback_query(call.id, '–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...')
        bot.send_message(call.from_user.id, '–ò–≥—Ä–∞ —Å –±–æ—Ç–æ–º –Ω–∞—á–∞–ª–∞—Å—å!')

        game_id = call.from_user.id
        player_symbol = random.choice(['‚ùå', '‚≠ï'])
        bot_symbol = '‚ùå' if player_symbol == '‚≠ï' else '‚≠ï'
        
        GAMES_DICT[game_id] = {
            'size': 3,
            'player1': {
                'id': call.from_user.id,
                'username': call.from_user.username,
                'symbol': player_symbol,
            },
            'player2': {
                'id': 'bot',
                'username': '–ë–æ—Ç–∏–∫',
                'symbol': bot_symbol,
            },
            'board': create_game_board(3, game_id),
            'current_turn': call.from_user.id
        }

        logger.info(f'–ò–≥—Ä–∞ {game_id} —Å–æ–∑–¥–∞–Ω–∞. –†–∞–∑–º–µ—Ä: 3x3. –ò–≥—Ä–æ–∫ 1: {call.from_user.username}, –ò–≥—Ä–æ–∫ 2: –ë–æ—Ç–∏–∫')
        send_game_message(game_id)

    except KeyError:
        logger.warning(f'–ò–≥—Ä–∞ {game_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        bot.answer_callback_query(call.id, '–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –≤ handle_bot_start_game: {e}', exc_info=True)
        bot.answer_callback_query(call.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ')